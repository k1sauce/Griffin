nextflow_process {

    name "Test Process GRIFFIN_COVERAGE"
    script "modules/local/GRIFFIN_COVERAGE.nf"
    process "GRIFFIN_COVERAGE"
    tag "GRIFFIN_COVERAGE"

    // 
    test("GRIFFIN_COVERAGE_T01") {
        when {
            process {
                """
                input[0] = [
                    [id: 'Healthy_demo', bam_file_name: 'Healthy_demo'], 
                    file("${projectDir}/test_data/bam/Healthy_GSM1833219_downsampled.sorted.mini.bam"),
                    file("${projectDir}/test_data/bam/Healthy_GSM1833219_downsampled.sorted.mini.bam.bai"),
                    file("${projectDir}/test_data/griffin_griffin_gc_and_mappability_correction_griffin_gc_bias/Healthy_demo.GC_bias.txt")
                ]
                input[1] = file("${projectDir}/test_data/ref/hg38.fa")
                input[2] = file("${projectDir}/test_data/ref/hg38.standard.chrom.sizes")
                input[3] = file("${projectDir}/test_data/sites/CTCF.hg38.1000.txt")
                input[4] = ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22']
                input[5] = [-5000, 5000]
                input[6] = [100, 200]
                input[7] = 20
                """
            }
        }

        then {
            assert process.success
            assert snapshot(process.out.result).match("GRIFFIN_COVERAGE_T01")
        }
    }

}