nextflow_process {

    name "Test Process GRIFFIN_MERGE_SITES"
    script "modules/local/GRIFFIN_MERGE_SITES.nf"
    process "GRIFFIN_MERGE_SITES"
    tag "GRIFFIN_MERGE_SITES"

    //
    test("GRIFFIN_MERGE_SITES_T01") {
        when {
            process {
                """
                input[0] = [
                    [id: 'Healthy_demo', bam_file_name: 'Healthy_demo'], 
                    file("${projectDir}/test_data/griffin_griffin_nucleosome_profiling_griffin_coverage/Healthy_demo.GC_corrected.bw"),
                    file("${projectDir}/test_data/griffin_griffin_nucleosome_profiling_griffin_coverage/Healthy_demo.uncorrected.bw")
                ]
                input[1] = file("${projectDir}/test_data/ref/k100.Umap.MultiTrackMappability.bw")
                input[2] = file("${projectDir}/test_data/ref/hg38.standard.chrom.sizes")
                input[3] = file("${projectDir}/test_data/griffin_nucleosome_profiling_demo_files/sites/CTCF.hg38.1000.txt")
                input[4] = ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22']
                input[5] = [-1000, 1000]
                input[6] = [-30, 30]
                input[7] = [-960, 960]
                input[8] = 10
                input[9] = 165
                input[10] = file("${projectDir}/test_data/ref/excluded_regions.bed")
                input[11] = 15
                input[12] = false
                input[13] = false
                input[14] = true
                input[15] = true
                input[16] = true
                input[17] = 'none'
                input[18] = 'CTCF_demo'
                """
            }
        }

        then {
            assert process.success
            assert snapshot(process.out.result).match("GRIFFIN_MERGE_SITES_T01")
        }
    }

}